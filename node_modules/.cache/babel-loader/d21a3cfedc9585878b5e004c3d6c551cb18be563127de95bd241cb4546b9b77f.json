{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Maloke\\\\wings-cafe-inventory\\\\src\\\\components\\\\UserManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UserManagement({\n  showNotification,\n  setIsLoggedIn,\n  isLoginMode\n}) {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [loginUsername, setLoginUsername] = useState('');\n  const [loginPassword, setLoginPassword] = useState('');\n  const [addUsername, setAddUsername] = useState('');\n  const [addPassword, setAddPassword] = useState('');\n  const [editUsername, setEditUsername] = useState('');\n  const [editPassword, setEditPassword] = useState('');\n  const [editingUserIndex, setEditingUserIndex] = useState(null);\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  // Fetch all users from the backend\n  const fetchUsers = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/users');\n      const data = await response.json();\n      setUsers(data.users);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  };\n\n  // Login handler\n  const handleLogin = async () => {\n    if (users.length === 0) {\n      showNotification('No users found. Please sign up first.');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:5000/api/users/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: loginUsername,\n          password: loginPassword\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setIsLoggedIn(true);\n        showNotification(`Welcome, ${data.user.username}!`);\n        setLoginUsername('');\n        setLoginPassword('');\n      } else {\n        showNotification(data.message);\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n    }\n  };\n\n  // Add user handler\n  const handleAddUser = async () => {\n    const existingUser = users.find(user => user.username === addUsername);\n    if (existingUser) {\n      showNotification('User already exists. Please choose a different username.');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:5000/api/users/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: addUsername,\n          password: addPassword\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setUsers([...users, data.user]);\n        showNotification(`User ${addUsername} added successfully. Logging you in now...`);\n        setLoginUsername(addUsername);\n        setLoginPassword(addPassword);\n        handleLogin();\n      } else {\n        showNotification(data.message);\n      }\n    } catch (error) {\n      console.error('Error adding user:', error);\n    }\n  };\n\n  // Edit user handler\n  const handleEditUser = async () => {\n    const updatedUser = {\n      username: editUsername,\n      password: editPassword\n    };\n    try {\n      const response = await fetch('http://localhost:5000/api/users/update', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: users[editingUserIndex].username,\n          password: users[editingUserIndex].password,\n          newUsername: editUsername,\n          newPassword: editPassword\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        const updatedUsers = [...users];\n        updatedUsers[editingUserIndex] = updatedUser;\n        setUsers(updatedUsers);\n        showNotification(`User ${editUsername} updated successfully.`);\n        setEditUsername('');\n        setEditPassword('');\n        setEditingUserIndex(null);\n      } else {\n        showNotification(data.message);\n      }\n    } catch (error) {\n      console.error('Error editing user:', error);\n    }\n  };\n\n  // Delete user handler\n  const handleDeleteUser = async username => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/users/${username}`, {\n        method: 'DELETE'\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setUsers(users.filter(user => user.username !== username));\n        showNotification('User deleted successfully.');\n      } else {\n        showNotification(data.message);\n      }\n    } catch (error) {\n      console.error('Error deleting user:', error);\n    }\n  };\n\n  // Start editing user\n  const handleStartEdit = (user, index) => {\n    setEditUsername(user.username);\n    setEditPassword(user.password);\n    setEditingUserIndex(index);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-management\",\n    children: [isLoginMode || users.length === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: loginUsername,\n        onChange: e => setLoginUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: loginPassword,\n        onChange: e => setLoginPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }, this), users.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No users found. Please sign up below.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 44\n      }, this)]\n    }, void 0, true) : null, /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      value: addUsername,\n      onChange: e => setAddUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: addPassword,\n      onChange: e => setAddPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddUser,\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this), !isLoginMode && users.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Manage Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: users.map((user, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [user.username, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleStartEdit(user, index),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteUser(user.username),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }, this), editingUserIndex !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Edit User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username\",\n          value: editUsername,\n          onChange: e => setEditUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: editPassword,\n          onChange: e => setEditPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEditUser,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 9\n  }, this);\n}\n_s(UserManagement, \"9jWUM8ZRhTTJjqeh6xy/kv4eEjk=\");\n_c = UserManagement;\nexport default UserManagement;\nvar _c;\n$RefreshReg$(_c, \"UserManagement\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","UserManagement","showNotification","setIsLoggedIn","isLoginMode","_s","users","setUsers","loginUsername","setLoginUsername","loginPassword","setLoginPassword","addUsername","setAddUsername","addPassword","setAddPassword","editUsername","setEditUsername","editPassword","setEditPassword","editingUserIndex","setEditingUserIndex","fetchUsers","response","fetch","data","json","error","console","handleLogin","length","method","headers","body","JSON","stringify","username","password","ok","user","message","handleAddUser","existingUser","find","handleEditUser","updatedUser","newUsername","newPassword","updatedUsers","handleDeleteUser","filter","handleStartEdit","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/Maloke/wings-cafe-inventory/src/components/UserManagement.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction UserManagement({ showNotification, setIsLoggedIn, isLoginMode }) {\r\n    const [users, setUsers] = useState([]);\r\n    const [loginUsername, setLoginUsername] = useState('');\r\n    const [loginPassword, setLoginPassword] = useState('');\r\n    const [addUsername, setAddUsername] = useState('');\r\n    const [addPassword, setAddPassword] = useState('');\r\n    const [editUsername, setEditUsername] = useState('');\r\n    const [editPassword, setEditPassword] = useState('');\r\n    const [editingUserIndex, setEditingUserIndex] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetchUsers();\r\n    }, []);\r\n\r\n    // Fetch all users from the backend\r\n    const fetchUsers = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:5000/api/users');\r\n            const data = await response.json();\r\n            setUsers(data.users);\r\n        } catch (error) {\r\n            console.error('Error fetching users:', error);\r\n        }\r\n    };\r\n\r\n    // Login handler\r\n    const handleLogin = async () => {\r\n        if (users.length === 0) {\r\n            showNotification('No users found. Please sign up first.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:5000/api/users/login', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    username: loginUsername,\r\n                    password: loginPassword,\r\n                }),\r\n            });\r\n            const data = await response.json();\r\n            if (response.ok) {\r\n                setIsLoggedIn(true);\r\n                showNotification(`Welcome, ${data.user.username}!`);\r\n                setLoginUsername('');\r\n                setLoginPassword('');\r\n            } else {\r\n                showNotification(data.message);\r\n            }\r\n        } catch (error) {\r\n            console.error('Login error:', error);\r\n        }\r\n    };\r\n\r\n    // Add user handler\r\n    const handleAddUser = async () => {\r\n        const existingUser = users.find(user => user.username === addUsername);\r\n        if (existingUser) {\r\n            showNotification('User already exists. Please choose a different username.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:5000/api/users/signup', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    username: addUsername,\r\n                    password: addPassword,\r\n                }),\r\n            });\r\n            const data = await response.json();\r\n            if (response.ok) {\r\n                setUsers([...users, data.user]);\r\n                showNotification(`User ${addUsername} added successfully. Logging you in now...`);\r\n                setLoginUsername(addUsername);\r\n                setLoginPassword(addPassword);\r\n                handleLogin();\r\n            } else {\r\n                showNotification(data.message);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error adding user:', error);\r\n        }\r\n    };\r\n\r\n    // Edit user handler\r\n    const handleEditUser = async () => {\r\n        const updatedUser = { username: editUsername, password: editPassword };\r\n        try {\r\n            const response = await fetch('http://localhost:5000/api/users/update', {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    username: users[editingUserIndex].username,\r\n                    password: users[editingUserIndex].password,\r\n                    newUsername: editUsername,\r\n                    newPassword: editPassword,\r\n                }),\r\n            });\r\n            const data = await response.json();\r\n            if (response.ok) {\r\n                const updatedUsers = [...users];\r\n                updatedUsers[editingUserIndex] = updatedUser;\r\n                setUsers(updatedUsers);\r\n                showNotification(`User ${editUsername} updated successfully.`);\r\n                setEditUsername('');\r\n                setEditPassword('');\r\n                setEditingUserIndex(null);\r\n            } else {\r\n                showNotification(data.message);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error editing user:', error);\r\n        }\r\n    };\r\n\r\n    // Delete user handler\r\n    const handleDeleteUser = async (username) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:5000/api/users/${username}`, {\r\n                method: 'DELETE',\r\n            });\r\n            const data = await response.json();\r\n            if (response.ok) {\r\n                setUsers(users.filter((user) => user.username !== username));\r\n                showNotification('User deleted successfully.');\r\n            } else {\r\n                showNotification(data.message);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error deleting user:', error);\r\n        }\r\n    };\r\n\r\n    // Start editing user\r\n    const handleStartEdit = (user, index) => {\r\n        setEditUsername(user.username);\r\n        setEditPassword(user.password);\r\n        setEditingUserIndex(index);\r\n    };\r\n\r\n    return (\r\n        <div className=\"user-management\">\r\n            {isLoginMode || users.length === 0 ? (\r\n                <>\r\n                    <h3>Login</h3>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Username\"\r\n                        value={loginUsername}\r\n                        onChange={(e) => setLoginUsername(e.target.value)}\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        value={loginPassword}\r\n                        onChange={(e) => setLoginPassword(e.target.value)}\r\n                    />\r\n                    <button onClick={handleLogin}>Login</button>\r\n                    {users.length === 0 && <p>No users found. Please sign up below.</p>}\r\n                </>\r\n            ) : null}\r\n\r\n            <h2>User Management</h2>\r\n            <h3>Add User</h3>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Username\"\r\n                value={addUsername}\r\n                onChange={(e) => setAddUsername(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                value={addPassword}\r\n                onChange={(e) => setAddPassword(e.target.value)}\r\n            />\r\n            <button onClick={handleAddUser}>Sign Up</button>\r\n\r\n            {!isLoginMode && users.length > 0 && (\r\n                <>\r\n                    <h3>Manage Users</h3>\r\n                    <ul>\r\n                        {users.map((user, index) => (\r\n                            <li key={index}>\r\n                                {user.username}\r\n                                <button onClick={() => handleStartEdit(user, index)}>Edit</button>\r\n                                <button onClick={() => handleDeleteUser(user.username)}>Delete</button>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                    {editingUserIndex !== null && (\r\n                        <div>\r\n                            <h4>Edit User</h4>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Username\"\r\n                                value={editUsername}\r\n                                onChange={(e) => setEditUsername(e.target.value)}\r\n                            />\r\n                            <input\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                                value={editPassword}\r\n                                onChange={(e) => setEditPassword(e.target.value)}\r\n                            />\r\n                            <button onClick={handleEditUser}>Update</button>\r\n                        </div>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserManagement;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}